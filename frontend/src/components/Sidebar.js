// Sidebar.js
import React, { useState, useEffect } from "react";
import axios from "axios";
import { MapContainer, TileLayer, Marker, Popup } from "react-leaflet";
import "leaflet/dist/leaflet.css";
import L from "leaflet";

// ุฅุตูุงุญ ุฃููููุงุช Leaflet
delete L.Icon.Default.prototype._getIconUrl;
L.Icon.Default.mergeOptions({
  iconRetinaUrl: require("leaflet/dist/images/marker-icon-2x.png"),
  iconUrl: require("leaflet/dist/images/marker-icon.png"),
  shadowUrl: require("leaflet/dist/images/marker-shadow.png"),
});

const Sidebar = () => {
  const [aiMessages, setAiMessages] = useState([
    {
      id: 1,
      text: "ูุฑุญุจุงู! ุฃูุง ูุณุงุนุฏู ุงูุฅุนูุงูู ุงูุฐูู. ูููููู ูุณุงุนุฏุชู ูู ุชุญููู ุงูุฃุฎุจุงุฑ ููุชุงุจุฉ ุงูุชูุงุฑูุฑ ุนู ุงูุชุฑุงุซ ุงูููุณุทููู ูุงููุงุจูุณู.",
      isUser: false,
    },
  ]);
  const [inputMessage, setInputMessage] = useState("");
  const [news, setNews] = useState([]);

  const sendAIMessage = () => {
    if (!inputMessage.trim()) return;
    const userMessage = { id: Date.now(), text: inputMessage, isUser: true };
    setAiMessages((prev) => [...prev, userMessage]);
    setInputMessage("");

    setTimeout(() => {
      const aiResponses = [
        "ุชุญููู ุงูุฐูุงุก ุงูุงุตุทูุงุนู ูุดูุฑ ุฅูู ุฃู ุงูุงูุชุดุงู ุงูุฃุซุฑู ูู ูุงุจูุณ ูุนูุณ ุนูู ุงูุชุงุฑูุฎ ุงูููุณุทููู.",
        "ููุฑุฌุงู ุงูุชุฑุงุซ ุงููุงุจูุณู ูุนุฒุฒ ุงููููุฉ ุงูุซูุงููุฉ ุงูููุณุทูููุฉ.",
        "ูุงุจูุณ ุชุญุชู ููุงูุฉ ูุฑูุฒูุฉ ูู ุงูุฎุฑูุทุฉ ุงูุซูุงููุฉ ุงูููุณุทูููุฉ.",
        "ุงูุชุฑุงุซ ุงููุงุจูุณู ููุงุฌู ุชุญุฏูุงุช ุงูุญูุธ ูุงูุชูุซูู.",
      ];
      const aiMessage = {
        id: Date.now() + 1,
        text: aiResponses[Math.floor(Math.random() * aiResponses.length)],
        isUser: false,
      };
      setAiMessages((prev) => [...prev, aiMessage]);
    }, 1000);
  };

  useEffect(() => {
    const fetchNews = async () => {
      try {
        const response = await axios.get(
          "https://api.worldnewsapi.com/search-news",
          {
            params: {
              "source-country": "ps",
              language: "ar",
              apiKey: "06ce6303812b4f869ec43c92a13b55c3",
            },
          }
        );
        setNews(response.data.articles.slice(0, 6));
      } catch (error) {
        console.error("ูุดู ูู ุฌูุจ ุงูุฃุฎุจุงุฑ:", error);
        // ุจูุงูุงุช ููููุฉ ููุนุฑุถ ุนูุฏ ูุดู ุฌูุจ ุงูุฃุฎุจุงุฑ
        setNews([
          { title: "ุงูุชุชุงุญ ูุนุฑุถ ุงูููุงูุฉ ุงููุงุจูุณูุฉ ูู ุงููุฏููุฉ ุงููุฏููุฉ" },
          { title: "ุฌุงูุนุฉ ุงููุฌุงุญ ุชุทูู ูุดุฑูุน ุชูุซูู ุงูุชุฑุงุซ ุงูุฑููู" },
          { title: "ูุฑุดุฉ ุชุฏุฑูุจูุฉ ูุญุฑููู ุงูุตุงุจูู ุงููุงุจูุณู" },
          { title: "ุงูุชุดุงู ุฃุซุฑู ุฌุฏูุฏ ูู ูุงุจูุณ ูุนูุฏ ููุนุตุฑ ุงูุฑููุงูู" },
          { title: "ููุฑุฌุงู ุงูุชุฑุงุซ ุงูููุณุทููู ูุณุชูุทุจ ุขูุงู ุงูุฒูุงุฑ" },
          { title: "ุฅุทูุงู ููุตุฉ ุฐููุฉ ููุชุฑุงุซ ุงูุซูุงูู ุงูููุณุทููู" },
        ]);
      }
    };
    fetchNews();
  }, []);

  const showLiveLocation = (location, description) => {
    alert(
      `๐ ูููุน ูุจุงุดุฑ: ${location}\n\n${description}\n\nุงููุฑุงุณููู ุงููุดุทูู: 2\nุฌูุฏุฉ ุงูุฅุดุงุฑุฉ: ููุชุงุฒุฉ\nุนุฏุฏ ุงููุดุงูุฏูู: 15,420\n\nูู ุชุฑูุฏ ูุดุงูุฏุฉ ุงูุจุซ ุงููุจุงุดุฑุ`
    );
  };

  return (
    <section className="py-8 bg-gradient-to-br from-gray-100 to-blue-50">
      <div className="container mx-auto px-6">
        {/* ุงูุนููุงู ูุน ุชุจุฏูู ุงูููุฌู ูุงูุจุงูุฑ */}
        <h2 className="text-4xl font-bold text-gray-900 mb-6 flex items-center justify-center">
          <img src="/banner.png" alt="ุงูุจุงูุฑ" className="w-12 h-12 ml-4" />
          ููุญุฉ ุงููุนูููุงุช ุงููุจุงุดุฑุฉ
          <img src="/logo.png" alt="ุงูููุฌู" className="w-12 h-12 mr-4" />
        </h2>

        <div className="grid lg:grid-cols-4 gap-6 mb-6">
          {/* Sidebar */}
          <div className="lg:col-span-1 space-y-6">
            {/* AI Chat */}
            <div className="bg-white rounded-lg shadow-lg p-4 ai-glow">
              <h3 className="font-bold text-gray-900 mb-3 flex items-center">
                <span className="ml-2">๐ค</span> ุงููุณุงุนุฏ ุงูุฐูู
              </h3>
              <div className="bg-gray-50 rounded-lg p-3 h-64 overflow-y-auto mb-3">
                {aiMessages.map((msg) => (
                  <div
                    key={msg.id}
                    className={`mb-2 flex ${
                      msg.isUser ? "justify-end" : "justify-start"
                    }`}
                  >
                    <span
                      className={`inline-block px-3 py-2 rounded max-w-xs ${
                        msg.isUser
                          ? "bg-gray-600 text-white"
                          : "bg-blue-500 text-white"
                      }`}
                    >
                      {msg.text}
                    </span>
                  </div>
                ))}
              </div>
              <div className="flex">
                <input
                  type="text"
                  value={inputMessage}
                  onChange={(e) => setInputMessage(e.target.value)}
                  onKeyPress={(e) => e.key === "Enter" && sendAIMessage()}
                  placeholder="ุงุณุฃู ุนู ุงูุฃุฎุจุงุฑ..."
                  className="flex-1 border rounded-r-lg px-2 py-1 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500"
                />
                <button
                  onClick={sendAIMessage}
                  className="bg-blue-500 text-white px-3 py-1 rounded-l-lg hover:bg-blue-600 transition-colors text-sm"
                >
                  ุฅุฑุณุงู
                </button>
              </div>
            </div>

            {/* Live Map */}
            <div className="bg-white rounded-lg shadow-lg p-4">
              <h3 className="font-bold text-gray-900 mb-3 flex items-center">
                <span className="ml-2">๐</span> ุงูุฎุฑูุทุฉ ุงูุญูุฉ
              </h3>
              <MapContainer
                center={[31.95, 35.93]}
                zoom={8}
                className="rounded-lg h-48"
              >
                <TileLayer url="https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png" />
                <Marker
                  position={[31.7767, 35.2345]}
                  eventHandlers={{
                    click: () =>
                      showLiveLocation(
                        "ุงููุณุฌุฏ ุงูุฃูุตู",
                        "ุจุซ ูุจุงุดุฑ ูู ุงููุฏุณ ุงูุดุฑูู"
                      ),
                  }}
                />
                <Marker
                  position={[32.2226, 35.2622]}
                  eventHandlers={{
                    click: () =>
                      showLiveLocation(
                        "ูุงุจูุณ",
                        "ุชุบุทูุฉ ูุจุงุดุฑุฉ ูู ูููุน ุงูุงูุชุดุงู ุงูุฃุซุฑู"
                      ),
                  }}
                />
                <Marker
                  position={[32.2211, 35.2544]}
                  eventHandlers={{
                    click: () => showLiveLocation("ุฌุจู ุฌุฑุฒูู", "ูุฑุงุณู ููุฏุงูู"),
                  }}
                />
              </MapContainer>
            </div>

            {/* News Ticker */}
            <div className="bg-white rounded-lg shadow-lg p-4 overflow-hidden">
              <h3 className="font-bold text-gray-900 mb-2 flex items-center">
                <span className="ml-2">๐ฐ</span> ุงูุฃุฎุจุงุฑ ุงููุชุญุฑูุฉ
              </h3>
              <div className="overflow-hidden whitespace-nowrap relative">
                <div className="ticker-container">
                  <div className="ticker-content">
                    {news.length > 0 ? (
                      news.map((n, idx) => (
                        <span
                          key={idx}
                          className="mx-4 text-sm text-gray-800 font-medium inline-block"
                        >
                          {n.title}
                        </span>
                      ))
                    ) : (
                      <span className="text-sm text-gray-500">
                        ุฌุงุฑู ุชุญููู ุงูุฃุฎุจุงุฑ...
                      </span>
                    )}
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </section>
  );
};

export default Sidebar;
